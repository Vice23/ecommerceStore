//products page

.productsMainContent {
    
    section {
        padding: 75px 0;
    }
    
    h2 {
        text-align: center;
    }
}

.products {
    display: flex;
    flex-wrap: wrap;
    
    //flex child
    li {
        //because we are using the default flex direction value, the main axis of alignment is the X axis, therefore, flex-basis will represent the width property
        //minuses the 30px from the left and right of margin
        flex-basis: calc((100%/3) - 30px);
        margin: 15px 5px;
        text-align:center;
    }

    img {
        border-radius: 10px;
    }

    .popularProduct {
        font-weight: bold;
    }


    //PLSFIXTHIS: is there a more elegant solution to unapplying the CSS solution to the nested span?
    .discountedPrice {
        text-decoration: line-through;
        color: rgba($color: $primary, $alpha: 0.5);
    } span {
        display: inline-block;
        text-decoration: none;
        color: rgba($color: $primary, $alpha: 1);
    }

}

.guarantees {
    background-color: $quaternary;
    // making the parent relative for the before position absolute effect below
    position:relative;

    h2 {
        font-size: 0.8rem;
    }

    h3 {
        font-size: 0.6rem;
        margin: 0;
    }

    p {
        font-size: 0.5rem;
        line-height: 1rem;
    }

    // The & in this case allows us to position ::before directly next to pseudo classes without repetition in the authored code - otherwise, it would make a space that wouldn't be right ( .guarantees::before )

    // by using 'before' it means we're creating a new element that allows the svg to sit on top of the section instead of sizing to fit the whole background of the section if we had put it in the background of, say, <section>
    &::before {
        content: "";
        // remember the SCSS 'gotcha' -- the relative paths are misleading from VS code
        background-image: url("../assets/wave-3.svg");
        position: absolute;
        background-color: $quaternary;
        height: 3rem;

        // to make the effect span the entire length of the page
        left: 0;
        right: 0;
        top: -60px;

        // telling scss how many times the image should appear over x amount of space
        background-position: top center;
        background-size: 1500px 60px;
        background-repeat: repeat-x;
    }

    // add flexbox to the 4 column, one row list
    ul {
        display: flex;

        li {
            margin: 20px;
            width: calc(25% - 40px);
            display:flex;
            flex-direction:column;
            align-items: center;
            text-align:center;
        }
    }
}


